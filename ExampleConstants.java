/* Generated By:JavaCC: Do not edit this line. ExampleConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExampleConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WRITE = 6;
  /** RegularExpression Id. */
  int READ = 7;
  /** RegularExpression Id. */
  int THIS = 8;
  /** RegularExpression Id. */
  int DO = 9;
  /** RegularExpression Id. */
  int BODY = 10;
  /** RegularExpression Id. */
  int DESCRIPTION = 11;
  /** RegularExpression Id. */
  int DECLARATION = 12;
  /** RegularExpression Id. */
  int DESIGNATE = 13;
  /** RegularExpression Id. */
  int AVALIATE = 14;
  /** RegularExpression Id. */
  int REPEAT = 15;
  /** RegularExpression Id. */
  int CONSTANT = 16;
  /** RegularExpression Id. */
  int VARIABLE = 17;
  /** RegularExpression Id. */
  int AND = 18;
  /** RegularExpression Id. */
  int OR = 19;
  /** RegularExpression Id. */
  int AS = 20;
  /** RegularExpression Id. */
  int OPLUS = 21;
  /** RegularExpression Id. */
  int OMINUS = 22;
  /** RegularExpression Id. */
  int OMULTIPLY = 23;
  /** RegularExpression Id. */
  int OPOWER = 24;
  /** RegularExpression Id. */
  int ODIV = 25;
  /** RegularExpression Id. */
  int OMOD = 26;
  /** RegularExpression Id. */
  int OEQ = 27;
  /** RegularExpression Id. */
  int ODEQ = 28;
  /** RegularExpression Id. */
  int ONEQ = 29;
  /** RegularExpression Id. */
  int OLT = 30;
  /** RegularExpression Id. */
  int OGT = 31;
  /** RegularExpression Id. */
  int OLTE = 32;
  /** RegularExpression Id. */
  int OGTE = 33;
  /** RegularExpression Id. */
  int OAND = 34;
  /** RegularExpression Id. */
  int OOR = 35;
  /** RegularExpression Id. */
  int ONOT = 36;
  /** RegularExpression Id. */
  int TYPE = 37;
  /** RegularExpression Id. */
  int IS = 38;
  /** RegularExpression Id. */
  int OCBRACKETS = 39;
  /** RegularExpression Id. */
  int CCBRACKETS = 40;
  /** RegularExpression Id. */
  int OBRACKETS = 41;
  /** RegularExpression Id. */
  int CBRACKETS = 42;
  /** RegularExpression Id. */
  int OPARENTHESES = 43;
  /** RegularExpression Id. */
  int CPARENTHESES = 44;
  /** RegularExpression Id. */
  int TRUE = 45;
  /** RegularExpression Id. */
  int UNTRUE = 46;
  /** RegularExpression Id. */
  int FALSE = 47;
  /** RegularExpression Id. */
  int RESULT = 48;
  /** RegularExpression Id. */
  int SLASH = 49;
  /** RegularExpression Id. */
  int DOT = 50;
  /** RegularExpression Id. */
  int COMMA = 51;
  /** RegularExpression Id. */
  int ALL = 52;
  /** RegularExpression Id. */
  int ALL_TYPES = 53;
  /** RegularExpression Id. */
  int NUM = 54;
  /** RegularExpression Id. */
  int ID = 55;
  /** RegularExpression Id. */
  int INT = 56;
  /** RegularExpression Id. */
  int REAL = 57;
  /** RegularExpression Id. */
  int STRING = 58;
  /** RegularExpression Id. */
  int LOGIC = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"write\"",
    "\"read\"",
    "\"this\"",
    "\"do\"",
    "\"body\"",
    "\"description\"",
    "\"declaration\"",
    "\"designate\"",
    "\"avaliate\"",
    "\"repeat\"",
    "\"constant\"",
    "\"variable\"",
    "\"and\"",
    "\"or\"",
    "\"as\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<<\"",
    "\">>\"",
    "\"<<=\"",
    "\">>=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"type\"",
    "\"is\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"true\"",
    "\"untrue\"",
    "\"false\"",
    "\"result\"",
    "\"/\"",
    "\".\"",
    "\",\"",
    "\"all\"",
    "<ALL_TYPES>",
    "<NUM>",
    "<ID>",
    "<INT>",
    "<REAL>",
    "<STRING>",
    "<LOGIC>",
  };

}
